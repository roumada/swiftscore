name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      # MongoDB service to be used with your Spring application.
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: --health-cmd="exit 0" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Compose
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Step 3: Build the Docker images and run Docker Compose
      - name: Build and run Docker Compose
        run: |
          docker-compose -f docker-compose.yml up --build -d

      # Step 4: Wait for the application and MongoDB to start
      - name: Wait for application to start
        run: |
          sleep 30  # Adjust based on your application's startup time

      # Step 5: Run the tests within the Spring application container
      - name: Run tests
        run: |
          docker-compose exec -T swiftscore ./gradlew test 

      # Step 6: Shut down Docker Compose (tear down the containers)
      - name: Tear down Docker Compose
        run: |
          docker-compose down

